<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <PackageId>livemap</PackageId>
        <Title>LiveMap</Title>
        <Ver>0.0.10</Ver>
        <Version Condition="'$(BUILD_NUMBER)' != ''">$(Ver)-b$(BUILD_NUMBER)</Version>
        <Version Condition="'$(BUILD_NUMBER)' == ''">$(Ver)-SNAPSHOT</Version>
        <Authors>BillyGalbreath</Authors>
        <Company>Pl3x</Company>
        <Description>LiveMap is a browser-based world map viewer for Vintage Story</Description>
        <Copyright>Copyright (c) 2024 William Blake Galbreath</Copyright>
        <PackageIcon>modicon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageProjectUrl>https://mods.vintagestory.at/livemap</PackageProjectUrl>
        <RepositoryUrl>https://github.com/billygalbreath/vs-livemap</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <RepositoryBranch>master</RepositoryBranch>
        <PackageType>Dependency</PackageType>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <DebugType>true</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <ExcludeGeneratedDebugSymbol>false</ExcludeGeneratedDebugSymbol>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
        <OutputPath>bin\mods\mod</OutputPath>
    </PropertyGroup>

    <ItemGroup>
        <Reference Include="Vintagestory" HintPath="$(VINTAGE_STORY)/Vintagestory.dll" Private="false" />
        <Reference Include="VintagestoryAPI" HintPath="$(VINTAGE_STORY)/VintagestoryAPI.dll" Private="false" />
        <Reference Include="VintagestoryLib" HintPath="$(VINTAGE_STORY)/VintagestoryLib.dll" Private="false" />
        <Reference Include="VintagestoryServer" HintPath="$(VINTAGE_STORY)/VintagestoryServer.dll" Private="false" />
        <Reference Include="VSCreative" HintPath="$(VINTAGE_STORY)/Mods/VSCreativeMod.dll" Private="false" />
        <Reference Include="VSEssentials" HintPath="$(VINTAGE_STORY)/Mods/VSEssentials.dll" Private="false" />
        <Reference Include="VSSurvivalMod" HintPath="$(VINTAGE_STORY)/Mods/VSSurvivalMod.dll" Private="false" />
        <Reference Include="Harmony" HintPath="$(VINTAGE_STORY)/Lib/0Harmony.dll" Private="false" />
        <Reference Include="Microsoft.Data.Sqlite" HintPath="$(VINTAGE_STORY)/Lib/Microsoft.Data.Sqlite.dll" Private="false" />
        <Reference Include="Newtonsoft.Json" HintPath="$(VINTAGE_STORY)/Lib/Newtonsoft.Json.dll" Private="false" />
        <Reference Include="protobuf-net" HintPath="$(VINTAGE_STORY)/Lib/protobuf-net.dll" Private="false" />
        <Reference Include="SkiaSharp" HintPath="$(VINTAGE_STORY)/Lib/SkiaSharp.dll" Private="false" />
        <Reference Include="ConfigLib" HintPath="../libs/configlib-1.3.9.dll" Private="false" />
        <PackageReference Include="VSImGui" Version="0.0.6" IncludeAssets="compile" PrivateAssets="all" />
        <PackageReference Include="ImGui.NET" Version="1.89.9.2" IncludeAssets="compile" PrivateAssets="all" />
        <PackageReference Include="JetBrains.Annotations" Version="2023.3.0" IncludeAssets="compile" PrivateAssets="all" />
        <PackageReference Include="NuGet.Build.Tasks.Pack" Version="6.7.0" IncludeAssets="compile" PrivateAssets="all" />
        <PackageReference Include="MimeTypeMapOfficial" Version="1.0.17" IncludeAssets="compile;runtime" PrivateAssets="all" />
        <None Include="LICENSE;README.md;resources/**" CopyToOutputDirectory="PreserveNewest" Pack="true" PackagePath="" Link="%(RecursiveDir)%(Filename)%(Extension)" />
    </ItemGroup>

    <Target Name="_ResolveCopyLocalNuGetPkgXmls" AfterTargets="ResolveReferences">
        <ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->'%(RootDir)%(Directory)%(Filename).xml')" Condition="'%(ReferenceCopyLocalPaths.NuGetPackageId)'!='' and Exists('%(RootDir)%(Directory)%(Filename).xml')" />
    </Target>

    <Target Name="InstallAndRunNpm" AfterTargets="PostBuildEvent">
        <Exec Command="npm install" WorkingDirectory="web" />
        <Exec Command="npm run build" WorkingDirectory="web" />
    </Target>

    <Target Name="CopyWebDir" AfterTargets="InstallAndRunNpm">
        <ItemGroup>
            <_CopyWebStuffs Include="web/public/**/*.*" Exclude="web/public/tiles/**/*;web/public/data/**" />
        </ItemGroup>
        <Copy SourceFiles="@(_CopyWebStuffs)" DestinationFolder="$(TargetDir)/assets/livemap/config/%(RecursiveDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" RetryDelayMilliseconds="300" />
    </Target>

    <Target Name="FilterModInfo" AfterTargets="CopyWebDir">
        <PropertyGroup>
            <ModInfoJson>$(TargetDir)/modinfo.json</ModInfoJson>
        </PropertyGroup>
        <WriteLinesToFile Lines="$([System.IO.File]::ReadAllText($(ModInfoJson))
            .Replace('{version}','$(Version)')
            .Replace('{description}','$(Description)')
            )" File="$(ModInfoJson)" Overwrite="true" Encoding="UTF-8"
        />
    </Target>

    <Target Name="FilterIndexHtml" AfterTargets="FilterModInfo">
        <PropertyGroup>
            <IndexHTML>$(TargetDir)/assets/livemap/config/index.html</IndexHTML>
        </PropertyGroup>
        <WriteLinesToFile Lines="$([System.IO.File]::ReadAllText($(IndexHTML))
            .Replace('{description}','$(Description)')
            )" File="$(IndexHTML)" Overwrite="true" Encoding="UTF-8"
        />
    </Target>

    <Target Name="PackZip" AfterTargets="FilterIndexHtml">
        <MakeDir Directories="bin\mods\mod" />
        <ItemGroup>
            <FilesToDelete Include="bin\**\*.nupkg" />
        </ItemGroup>
        <Delete Files="@(FilesToDelete)" />
        <ZipDirectory DestinationFile="bin/livemap-$(Version).zip" SourceDirectory="$(TargetDir)" Overwrite="true" />
    </Target>

</Project>
